/*
 * Copyright (c) 2020 Derek Schmell
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define TWO 1
#define THREE 2


/ {
	behaviors {
		LT: behavior_lt_mo {
			compatible = "zmk,behavior-hold-tap";
			label = "lt-label";
			#binding-cells = <2>;
			tapping_term_ms = <165>;
			bindings = <&mo>, <&kp>;
			flavor = "balanced";
		};
    };


	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |                   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
// | LCTL  | LGUI  | LALT |  GRAV |  | EQL | DEL | BKSP|  | RET | SPC  | LBKT |  RBKT  | LBKT | HOME  |   END |
			bindings = <
&kp ESC  &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5                    &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 &kp MINUS
&kp TAB  &kp Q     &kp W     &kp E     &kp R     &kp T                        &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
&kp LGUI &kp A     &kp S     &kp D     &LT TWO F     &kp G                        &kp H     &LT THREE J    &kp K     &kp L     &kp SCLN  &kp QUOT
&kp LSFT &kp Z     &kp X     &kp C     &kp V     &kp B                        &kp N     &kp M     &kp CMMA  &kp DOT   &kp FSLH  &kp RSFT
&kp LCTL  &kp LGUI  &kp LALT &kp GRAV    &kp EQL  &kp BKSP                     &kp SPC  &kp LBKT    &kp RBKT   &kp MINUS  &kp HOME   &kp END
                                                 &kp DEL                    &kp RET
			>;
		};

		TWO {
// ---------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |                   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
// | LCTL  | LGUI  | LALT |  GRAV |  | EQL | DEL | BKSP|  | RET | SPC  | LBKT |  RBKT  | LBKT | HOME  |   END |
			bindings = <
&kp F1  &kp F2 &kp F3 &kp F4 &kp F5 &kp F6                          &kp F7   &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &none    &none    &none    &none    &none                       &none   &none  &none  &none  &none  &none
&trans &none     &none     &none     &trans    &none                     &none     &kp LARW     &kp DARW     &kp UARW     &kp RARW  &none
&trans &none     &none     &none     &none     &none                    &none     &none     &none  &none   &none  &none
&trans &none  &none &none  &none  &trans                                 &kp END  &none    &none   &none  &none   &none
                                                 &trans                      &kp HOME
			>;
		};

		THREE {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |                   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
// | LCTL  | LGUI  | LALT |  GRAV |  | EQL | DEL | BKSP|  | RET | SPC  | LBKT |  RBKT  | LBKT | HOME  |   END |
			bindings = <
&cp M_MUTE   &cp M_VOLD    &cp M_VOLU    &none    &none    &none                       &none   &none  &none  &none  &none  &none
&none  &cp M_PREV     &cp M_PLAY   &cp M_NEXT     &none    &none                       &none   &none  &none  &none  &none  &none
&none &none     &none     &none     &none    &none                     &none   &trans &none  &none  &none  &none
&none &none     &none     &none     &none     &none                    &none   &none  &none  &none  &none  &none
&bt BT_PROF_PREV &bt BT_PROF_NEXT  &bt BT_PROF_SEL 0 &none  &none  &none                                 &none   &none  &none  &none  &none  &bt BT_CLEAR_BONDS
                                                 &none                 &none
			>;
		};
	
	};
};
